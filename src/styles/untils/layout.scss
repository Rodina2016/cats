.wrapper,
.wrapper-fluid {
  margin-right: auto;
  margin-left: auto;
  box-sizing: border-box;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
}

.wrapper-fluid {
  width: 100% !important;
}

.grid {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: $gutter / -2;
  margin-right: $gutter / -2;
}

.cell {
  box-sizing: border-box;
  flex: 0 0 auto;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
  width: 100%;
}

// generate wrapper sizes

@mixin wrapper($wrapper-max-widths, $breakpoint) {
  width: #{map-get($wrapper-max-widths, $breakpoint)};
}

.wrapper {
  margin-right: auto;
  margin-left: auto;
  max-width: #{map_get($wrapper-max-widths, xl)};
  @each $breakpoint, $width in $grid-breakpoints {
    @media (max-width: $width) {
      @include wrapper($wrapper-max-widths, $breakpoint);
    }
  }
}

// generate column options

@mixin grid($breakpoint, $grid-column-count) {
  .#{$breakpoint} {
    @for $i from $grid-column-count through 1 {
      // column widths
      $col-width: ($i / $grid-column-count) * 100%;
      &-#{$i} {
        width: $col-width;
        flex-basis: $col-width;
      }
      // column offsets
      &-offset-#{$i} {
        margin-left: $col-width;
      }
    }
    &-offset-0 {
      margin-left: 0;
    }
  }

  // vertical aligns

  .top-#{$breakpoint} {
    align-items: flex-start;
  }
  .middle-#{$breakpoint} {
    align-items: center;
  }
  .bottom-#{$breakpoint} {
    align-items: flex-end;
  }
  .baseline-#{$breakpoint} {
    align-items: baseline;
  }

  // visibility

  .visible-#{$breakpoint} {
    display: flex;
  }

  .hidden-#{$breakpoint} {
    display: none;
  }

  // justify content and text align

  .start-#{$breakpoint} {
    justify-content: flex-start;
    text-align: start;
  }

  .center-#{$breakpoint} {
    justify-content: center;
    text-align: center;
  }

  .end-#{$breakpoint} {
    justify-content: flex-end;
    text-align: end;
  }

  .around-#{$breakpoint} {
    justify-content: space-around;
  }

  .between-#{$breakpoint} {
    justify-content: space-between;
  }

  // flex-direction

  .direction-row-reverse-#{$breakpoint} {
    flex-direction: row-reverse;
  }

  .direction-row-#{$breakpoint} {
    flex-direction: row;
  }

  .direction-col-reverse-#{$breakpoint} {
    flex-direction: column-reverse;
  }

  .direction-col-#{$breakpoint} {
    flex-direction: column;
  }

  // reordering

  .first-#{$breakpoint} {
    order: -1;
  }

  .last-#{$breakpoint} {
    order: 1;
  }
}

@include grid(xl, $grid-column-count);
@each $breakpoint, $width in $grid-breakpoints {
  @media (max-width: $width) {
    @include grid($breakpoint, $grid-column-count);
  }
}


// remove gutter space

.ungutter {
  margin-left: 0;
  margin-right: 0;
}
